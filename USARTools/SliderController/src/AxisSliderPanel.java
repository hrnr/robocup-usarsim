//package gov.nist.sliderController;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AxisSliderPanel.java
 *
 * Created on Jun 28, 2010, 11:34:45 AM
 */

/**
 *
 * @author nunnally
 */
import java.awt.*;
import javax.swing.*;
import javax.swing.event.*;

public class AxisSliderPanel extends javax.swing.JPanel {
    private DOFSlider val;
    private JLabel axis, sliderVal;
    private int multiplier;

    /** Creates new form AxisSliderPanel */
    //Held in Bone/LinkSliderPanel, works with individual sliders, and val/axis labels
    public AxisSliderPanel(char dof, double min, double max, String boneName, int percision, int controlNum, int linkNum) {
        multiplier = (int) Math.pow(10, percision);

        axis = new JLabel();
        axis.setFont(new Font("Tahoma", 1, 12));
        axis.setText(""+dof);
        val = new ArmDOFSlider(controlNum, linkNum);
        
        val.setMinimum((int)Math.ceil(min*multiplier));
        val.setMaximum((int)Math.ceil(max*multiplier));
        val.setMajorTickSpacing(multiplier/2);
        val.setMinorTickSpacing(multiplier/10);
        val.setPaintTicks(true);
        val.setValue(0);
        val.addChangeListener(new sliderStateChange());
        
        sliderVal = new JLabel();
        sliderVal.setFont(new Font("Tahoma", 0, 10));
        sliderVal.setText(""+(((double)val.getValue())/multiplier));

        this.setLayout(new FlowLayout(FlowLayout.LEADING));
        this.add(axis);
        this.add(val);
        this.add(sliderVal);

        //this.setBorder(BorderFactory.createLineBorder(Color.black));
    }

    public DOFSlider getSlider(){
        return val;
    }

    //Auto updates the sliderVal label
    private class sliderStateChange implements ChangeListener{
        public void stateChanged(ChangeEvent evt){
            DOFSlider source = (DOFSlider)evt.getSource();
            sliderVal.setText(""+(((double)source.getValue())/multiplier));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 44, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
